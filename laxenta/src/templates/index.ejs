<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= botName %> - Discord Music Bot</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
</head>
<body class="bg-gray-900 text-white overflow-x-hidden">
    <!-- Animated Background -->
    <div class="fixed inset-0 z-0">
        <svg class="absolute inset-0 w-full h-full" viewBox="0 0 1000 1000" preserveAspectRatio="xMidYMid slice">
            <defs>
                <radialGradient id="grad1" cx="50%" cy="50%" r="50%">
                    <stop offset="0%" style="stop-color:#7c3aed;stop-opacity:0.3" />
                    <stop offset="100%" style="stop-color:#7c3aed;stop-opacity:0" />
                </radialGradient>
                <radialGradient id="grad2" cx="50%" cy="50%" r="50%">
                    <stop offset="0%" style="stop-color:#3b82f6;stop-opacity:0.2" />
                    <stop offset="100%" style="stop-color:#3b82f6;stop-opacity:0" />
                </radialGradient>
            </defs>
            <circle class="floating-orb" cx="200" cy="200" r="100" fill="url(#grad1)">
                <animateTransform attributeName="transform" type="translate" 
                    values="0,0; 50,30; 0,0" dur="6s" repeatCount="indefinite"/>
            </circle>
            <circle class="floating-orb" cx="800" cy="600" r="150" fill="url(#grad2)">
                <animateTransform attributeName="transform" type="translate" 
                    values="0,0; -30,50; 0,0" dur="8s" repeatCount="indefinite"/>
            </circle>
        </svg>
    </div>

    <!-- Navigation -->
    <nav class="fixed top-0 w-full z-50 bg-gray-900 bg-opacity-80 backdrop-blur-lg border-b border-gray-800">
        <div class="max-w-7xl mx-auto px-6 py-4">
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-3">
                    <img src="<%= botAvatar %>" alt="<%= botName %>" class="w-10 h-10 rounded-full ring-2 ring-purple-500">
                    <span class="text-xl font-bold bg-gradient-to-r from-purple-400 to-blue-400 bg-clip-text text-transparent">
                        <%= botName %>
                    </span>
                </div>
                
                <div class="hidden md:flex items-center space-x-8">
                    <a href="#home" class="nav-link hover:text-purple-400 transition-colors">Home</a>
                    <a href="#features" class="nav-link hover:text-purple-400 transition-colors">Features</a>
                    <a href="#commands" class="nav-link hover:text-purple-400 transition-colors">Commands</a>
                    <a href="/dashboard" class="nav-link hover:text-purple-400 transition-colors">Dashboard</a>
                    <a href="https://discord.gg/C9t8dQABgY" target="_blank" class="nav-link hover:text-purple-400 transition-colors">Support</a>
                </div>

                <div class="flex items-center space-x-4">
                    <% if (isAuthenticated && user) { %>
                        <div class="flex items-center space-x-3">
                            <img src="https://images-eds-ssl.xboxlive.com/image?url=4rt9.lXDC4H_93laV1_eHM0OYfiFeMI2p9MWie0CvL99U4GA1gf6_kayTt_kBblFwHwo8BW8JXlqfnYxKPmmBevsdZpJiIhrXJKvOSYipsaHqFIbCP6s5rOtPA59rEWG0TDcTxZjqTOH7KyNDpp3SdjDoloGHqOiM0jglAUqKA4-&format=source" 
                                 alt="<%= user.username %>" class="w-8 h-8 rounded-full">
                            <span class="text-sm font-medium"><%= user.username %></span>
                            <form method="post" action="/logout" class="inline">
                                <button type="submit" class="text-gray-400 hover:text-white">
                                    <i class="fas fa-sign-out-alt"></i>
                                </button>
                            </form>
                        </div>
                    <% } else { %>
                        <a href="/auth/discord" class="bg-purple-600 hover:bg-purple-700 px-4 py-2 rounded-lg flex items-center space-x-2 transition-colors">
                            <i class="fab fa-discord"></i>
                            <span>Login</span>
                        </a>
                    <% } %>
                </div>
            </div>
        </div>
    </nav>

    <!-- Hero Section -->
    <section id="home" class="relative min-h-screen flex items-center pt-20">
        <div class="max-w-7xl mx-auto px-6 w-full">
            <div class="grid lg:grid-cols-2 gap-12 items-center">
                <div class="space-y-8">
                    <div class="space-y-4">
                        <h1 class="text-5xl lg:text-7xl font-bold leading-tight">
                            Elevate Your
                            <span class="bg-gradient-to-r from-purple-400 to-blue-400 bg-clip-text text-transparent">
                                Discord
                            </span>
                            Music Experience
                        </h1>
                        <p class="text-xl text-gray-300 max-w-xl">
                            The ultimate music companion for your Discord server. High-quality streaming, 
                            Spotify integration, and unique features that make listening together amazing.
                        </p>
                    </div>
                    
                    <div class="flex flex-wrap gap-4">
                        <a href="https://discord.com/api/oauth2/authorize?client_id=<%= clientId %>&permissions=8&scope=bot%20applications.commands" 
                           target="_blank" 
                           class="bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 px-8 py-4 rounded-lg font-semibold flex items-center space-x-2 transition-all transform hover:scale-105">
                            <i class="fas fa-plus"></i>
                            <span>Add to Server</span>
                        </a>
                        <a href="/dashboard" 
                           class="border border-gray-600 hover:border-purple-500 px-8 py-4 rounded-lg font-semibold transition-all hover:bg-gray-800">
                            Dashboard
                        </a>
                    </div>

                    <div class="flex items-center space-x-8 pt-4">
                        <div class="text-center">
                            <div class="text-3xl font-bold text-purple-400"><%= stats.servers %>+</div>
                            <div class="text-sm text-gray-400">Servers</div>
                        </div>
                        <div class="w-px h-12 bg-gray-700"></div>
                        <div class="text-center">
                            <div class="text-3xl font-bold text-blue-400">24/7</div>
                            <div class="text-sm text-gray-400">Uptime</div>
                        </div>
                        <div class="w-px h-12 bg-gray-700"></div>
                        <div class="text-center">
                            <div class="text-3xl font-bold text-green-400"><%= stats.ping %>ms</div>
                            <div class="text-sm text-gray-400">Latency</div>
                        </div>
                    </div>
                </div>

                <div class="relative flex justify-center">
                    <!-- Animated Music Visualization -->
                    <div class="relative">
                        <svg width="400" height="400" viewBox="0 0 400 400" class="drop-shadow-2xl">
                            <defs>
                                <linearGradient id="waveGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                                    <stop offset="0%" style="stop-color:#7c3aed;stop-opacity:1" />
                                    <stop offset="100%" style="stop-color:#3b82f6;stop-opacity:1" />
                                </linearGradient>
                                <filter id="glow">
                                    <feGaussianBlur stdDeviation="3" result="coloredBlur"/>
                                    <feMerge> 
                                        <feMergeNode in="coloredBlur"/>
                                        <feMergeNode in="SourceGraphic"/>
                                    </feMerge>
                                </filter>
                            </defs>
                            
                            <!-- Outer circle -->
                            <circle cx="200" cy="200" r="180" fill="none" stroke="url(#waveGradient)" stroke-width="2" opacity="0.3">
                                <animate attributeName="r" values="180;190;180" dur="3s" repeatCount="indefinite"/>
                                <animate attributeName="opacity" values="0.3;0.6;0.3" dur="3s" repeatCount="indefinite"/>
                            </circle>
                            
                            <!-- Middle circle -->
                            <circle cx="200" cy="200" r="140" fill="none" stroke="url(#waveGradient)" stroke-width="3" opacity="0.5">
                                <animate attributeName="r" values="140;150;140" dur="2s" repeatCount="indefinite"/>
                            </circle>
                            
                            <!-- Inner circle with bot avatar -->
                            <circle cx="200" cy="200" r="100" fill="url(#waveGradient)" opacity="0.1"/>
                            <image href="<%= botAvatar %>" x="150" y="150" width="100" height="100" 
                                   clip-path="circle(50px at 50px 50px)" filter="url(#glow)"/>
                            
                            <!-- Audio bars -->
                            <g transform="translate(200,200)">
                                <rect x="-60" y="-10" width="8" height="20" fill="url(#waveGradient)" rx="4">
                                    <animate attributeName="height" values="20;60;20" dur="1s" repeatCount="indefinite"/>
                                    <animate attributeName="y" values="-10;-30;-10" dur="1s" repeatCount="indefinite"/>
                                </rect>
                                <rect x="-45" y="-15" width="8" height="30" fill="url(#waveGradient)" rx="4">
                                    <animate attributeName="height" values="30;80;30" dur="1.2s" repeatCount="indefinite"/>
                                    <animate attributeName="y" values="-15;-40;-15" dur="1.2s" repeatCount="indefinite"/>
                                </rect>
                                <rect x="-30" y="-8" width="8" height="16" fill="url(#waveGradient)" rx="4">
                                    <animate attributeName="height" values="16;50;16" dur="0.8s" repeatCount="indefinite"/>
                                    <animate attributeName="y" values="-8;-25;-8" dur="0.8s" repeatCount="indefinite"/>
                                </rect>
                                <rect x="22" y="-8" width="8" height="16" fill="url(#waveGradient)" rx="4">
                                    <animate attributeName="height" values="16;50;16" dur="0.9s" repeatCount="indefinite"/>
                                    <animate attributeName="y" values="-8;-25;-8" dur="0.9s" repeatCount="indefinite"/>
                                </rect>
                                <rect x="37" y="-15" width="8" height="30" fill="url(#waveGradient)" rx="4">
                                    <animate attributeName="height" values="30;80;30" dur="1.1s" repeatCount="indefinite"/>
                                    <animate attributeName="y" values="-15;-40;-15" dur="1.1s" repeatCount="indefinite"/>
                                </rect>
                                <rect x="52" y="-10" width="8" height="20" fill="url(#waveGradient)" rx="4">
                                    <animate attributeName="height" values="20;60;20" dur="1.3s" repeatCount="indefinite"/>
                                    <animate attributeName="y" values="-10;-30;-10" dur="1.3s" repeatCount="indefinite"/>
                                </rect>
                            </g>
                        </svg>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Features Section -->
    <section id="features" class="py-20 relative">
        <div class="max-w-7xl mx-auto px-6">
            <div class="text-center mb-16">
                <h2 class="text-4xl lg:text-5xl font-bold mb-4">
                    <span class="bg-gradient-to-r from-purple-400 to-blue-400 bg-clip-text text-transparent">
                        Powerful
                    </span> Features
                </h2>
                <p class="text-xl text-gray-400 max-w-2xl mx-auto">
                    Everything you need for the perfect Discord music experience
                </p>
            </div>

            <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
                <div class="feature-card bg-gray-800 bg-opacity-50 backdrop-blur-sm rounded-xl p-8 border border-gray-700 hover:border-purple-500 transition-all">
                    <div class="w-16 h-16 bg-gradient-to-br from-purple-500 to-blue-500 rounded-full flex items-center justify-center mb-6">
                        <i class="fas fa-music text-2xl text-white"></i>
                    </div>
                    <h3 class="text-xl font-bold mb-4">High-Quality Audio</h3>
                    <p class="text-gray-400">Crystal clear sound with advanced streaming technology and zero buffering delays.</p>
                </div>

                <div class="feature-card bg-gray-800 bg-opacity-50 backdrop-blur-sm rounded-xl p-8 border border-gray-700 hover:border-green-500 transition-all">
                    <div class="w-16 h-16 bg-gradient-to-br from-green-500 to-emerald-500 rounded-full flex items-center justify-center mb-6">
                        <i class="fab fa-spotify text-2xl text-white"></i>
                    </div>
                    <h3 class="text-xl font-bold mb-4">Spotify Integration</h3>
                    <p class="text-gray-400">Connect your Spotify and play your playlists, liked songs, and discover new music.</p>
                </div>

                <div class="feature-card bg-gray-800 bg-opacity-50 backdrop-blur-sm rounded-xl p-8 border border-gray-700 hover:border-blue-500 transition-all">
                    <div class="w-16 h-16 bg-gradient-to-br from-blue-500 to-cyan-500 rounded-full flex items-center justify-center mb-6">
                        <i class="fas fa-sliders-h text-2xl text-white"></i>
                    </div>
                    <h3 class="text-xl font-bold mb-4">Advanced Controls</h3>
                    <p class="text-gray-400">Full equalizer, volume control, and DJ mode for the perfect listening experience.</p>
                </div>

                <div class="feature-card bg-gray-800 bg-opacity-50 backdrop-blur-sm rounded-xl p-8 border border-gray-700 hover:border-yellow-500 transition-all">
                    <div class="w-16 h-16 bg-gradient-to-br from-yellow-500 to-orange-500 rounded-full flex items-center justify-center mb-6">
                        <i class="fas fa-bolt text-2xl text-white"></i>
                    </div>
                    <h3 class="text-xl font-bold mb-4">Lightning Fast</h3>
                    <p class="text-gray-400">Minimal latency and instant response times. Current ping: <%= stats.ping %>ms</p>
                </div>

                <div class="feature-card bg-gray-800 bg-opacity-50 backdrop-blur-sm rounded-xl p-8 border border-gray-700 hover:border-indigo-500 transition-all">
                    <div class="w-16 h-16 bg-gradient-to-br from-indigo-500 to-purple-500 rounded-full flex items-center justify-center mb-6">
                        <i class="fas fa-globe text-2xl text-white"></i>
                    </div>
                    <h3 class="text-xl font-bold mb-4">Multiple Sources</h3>
                    <p class="text-gray-400">YouTube, Spotify, SoundCloud, and more - all in one powerful bot.</p>
                </div>

                <div class="feature-card bg-gray-800 bg-opacity-50 backdrop-blur-sm rounded-xl p-8 border border-gray-700 hover:border-pink-500 transition-all">
                    <div class="w-16 h-16 bg-gradient-to-br from-pink-500 to-rose-500 rounded-full flex items-center justify-center mb-6">
                        <i class="fas fa-heart text-2xl text-white"></i>
                    </div>
                    <h3 class="text-xl font-bold mb-4">Community Focused</h3>
                    <p class="text-gray-400">Regular updates based on feedback and dedicated community support.</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Commands Section -->
    <section id="commands" class="py-20 bg-gray-800 bg-opacity-30 relative">
        <div class="max-w-7xl mx-auto px-6">
            <div class="text-center mb-12">
                <h2 class="text-4xl lg:text-5xl font-bold mb-4">
                    <span class="bg-gradient-to-r from-purple-400 to-blue-400 bg-clip-text text-transparent">
                        Command
                    </span> Explorer
                </h2>
            </div>

            <!-- Command Filters -->
            <div class="flex flex-col md:flex-row justify-between items-center mb-8 space-y-4 md:space-y-0">
                <div class="flex space-x-2">
                    <button class="filter-btn active bg-purple-600 hover:bg-purple-700 px-4 py-2 rounded-lg transition-colors" data-filter="all">
                        All Commands
                    </button>
                    <button class="filter-btn bg-gray-700 hover:bg-gray-600 px-4 py-2 rounded-lg transition-colors" data-filter="slash">
                        Slash Commands
                    </button>
                    <button class="filter-btn bg-gray-700 hover:bg-gray-600 px-4 py-2 rounded-lg transition-colors" data-filter="prefix">
                        Prefix Commands
                    </button>
                </div>
                
                <div class="relative">
                    <input type="text" id="command-search" 
                           placeholder="Search commands..." 
                           class="bg-gray-800 border border-gray-600 focus:border-purple-500 rounded-lg px-4 py-2 pr-10 w-64 focus:outline-none transition-colors">
                    <i class="fas fa-search absolute right-3 top-3 text-gray-400"></i>
                </div>
            </div>

            <!-- Commands Grid -->
    <!-- Commands Grid -->
<div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6" id="commands-container">
    <% if (commands && commands.length > 0) { %>
        <% commands.forEach(function(command) { %>
            <% if (command && command.name) { %>
                <div class="command-card bg-gray-800 bg-opacity-50 backdrop-blur-sm rounded-lg p-6 border border-gray-700 hover:border-purple-500 transition-all" 
                     data-category="<%= command.type || 'unknown' %>" 
                     data-name="<%= String(command.name).toLowerCase() %>"
                     data-description="<%= String(command.description || 'No description available').toLowerCase() %>">
                    <div class="flex items-center mb-4">
                        <% if (command.type === 'slash') { %>
                            <span class="bg-blue-500 bg-opacity-20 text-blue-400 px-2 py-1 rounded text-sm mr-3">
                                /
                            </span>
                        <% } else { %>
                            <span class="bg-purple-500 bg-opacity-20 text-purple-400 px-2 py-1 rounded text-sm mr-3">
                                !
                            </span>
                        <% } %>
                        <h3 class="font-semibold text-lg"><%= command.name %></h3>
                    </div>
                    
                    <p class="text-gray-400 mb-4"><%= command.description || 'No description available' %></p>
                    
                    <div class="space-y-2 text-sm">
                        <% if (command.usage) { %>
                            <div class="text-gray-500">
                                <span class="font-medium">Usage:</span> 
                                <code class="bg-gray-900 px-2 py-1 rounded"><%= command.usage %></code>
                            </div>
                        <% } %>
                        <% if (command.aliases && Array.isArray(command.aliases) && command.aliases.length > 0) { %>
                            <div class="text-gray-500">
                                <span class="font-medium">Aliases:</span> <%= command.aliases.join(', ') %>
                            </div>
                        <% } %>
                    </div>
                </div>
            <% } %>
        <% }); %>
    <% } else { %>
        <div class="col-span-full text-center text-gray-400 py-12">
            <i class="fas fa-code text-4xl mb-4 opacity-50"></i>
            <p class="text-lg">No commands available yet</p>
            <p class="text-sm">Commands will appear here once the bot is registered</p>
        </div>
    <% } %>
</div>
        </div>
    </section>

    <!-- Stats Section -->
    <section class="py-20">
        <div class="max-w-7xl mx-auto px-6">
            <div class="grid grid-cols-2 lg:grid-cols-4 gap-6">
                <div class="stat-card bg-gray-800 bg-opacity-50 backdrop-blur-sm rounded-xl p-6 text-center border border-gray-700">
                    <div class="text-4xl font-bold text-purple-400 mb-2"><%= stats.servers %></div>
                    <div class="text-gray-400">Total Servers</div>
                </div>
                
                <div class="stat-card bg-gray-800 bg-opacity-50 backdrop-blur-sm rounded-xl p-6 text-center border border-gray-700">
                    <div class="text-4xl font-bold text-blue-400 mb-2"><%= stats.users.toLocaleString() %></div>
                    <div class="text-gray-400">Total Users</div>
                </div>
                
                <div class="stat-card bg-gray-800 bg-opacity-50 backdrop-blur-sm rounded-xl p-6 text-center border border-gray-700">
                    <div class="text-4xl font-bold text-green-400 mb-2"><%= stats.activePlayers %></div>
                    <div class="text-gray-400">Active Players</div>
                </div>
                
                <div class="stat-card bg-gray-800 bg-opacity-50 backdrop-blur-sm rounded-xl p-6 text-center border border-gray-700">
                    <div class="text-4xl font-bold text-yellow-400 mb-2"><%= stats.totalTracks %></div>
                    <div class="text-gray-400">Queued Tracks</div>
                </div>
            </div>
        </div>
    </section>

    <!-- Call to Action -->
    <section class="py-20">
        <div class="max-w-4xl mx-auto px-6 text-center">
            <div class="bg-gradient-to-r from-purple-600 to-blue-600 rounded-2xl p-12 relative overflow-hidden">
                <div class="relative z-10">
                    <h2 class="text-3xl lg:text-4xl font-bold text-white mb-6">
                        Ready to Transform Your Discord Server?
                    </h2>
                    <p class="text-xl text-white text-opacity-90 mb-8 max-w-2xl mx-auto">
                        Join <%= stats.servers %> servers already enjoying <%= botName %>'s premium music experience.
                    </p>
                    <a href="https://discord.com/api/oauth2/authorize?client_id=<%= clientId %>&permissions=8&scope=bot%20applications.commands" 
                       target="_blank"
                       class="bg-white text-purple-600 hover:bg-gray-100 font-semibold py-4 px-8 rounded-lg transition-colors inline-flex items-center space-x-2">
                        <i class="fab fa-discord text-xl"></i>
                        <span>Add to Discord</span>
                    </a>
                </div>
                
                <!-- Background decoration -->
                <div class="absolute top-0 right-0 w-64 h-64 bg-white bg-opacity-10 rounded-full -mr-32 -mt-32"></div>
                <div class="absolute bottom-0 left-0 w-48 h-48 bg-white bg-opacity-10 rounded-full -ml-24 -mb-24"></div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="py-12 border-t border-gray-800">
        <div class="max-w-7xl mx-auto px-6">
            <div class="flex flex-col lg:flex-row justify-between items-center space-y-6 lg:space-y-0">
                <div class="flex items-center space-x-3">
                    <img src="<%= botAvatar %>" alt="<%= botName %>" class="w-10 h-10 rounded-full">
                    <span class="text-xl font-bold"><%= botName %></span>
                </div>
                
                <div class="flex flex-col items-center lg:items-end space-y-2">
                    <div class="flex items-center space-x-6 text-sm">
                        <div class="flex items-center space-x-2">
                            <span class="text-gray-400">Status:</span>
                            <span id="bot-status" class="px-2 py-1 rounded text-xs bg-green-500">Online</span>
                        </div>
                        <div id="latency" class="text-gray-400">Latency: <%= stats.ping %>ms</div>
                    </div>
                    
                    <div class="flex items-center space-x-6 text-sm text-gray-400">
                        <span>&copy; <%= new Date().getFullYear() %> <%= botName %></span>
                        <a href="https://github.com/shelleyloosespatience" target="_blank" class="hover:text-white flex items-center space-x-1">
                            <i class="fab fa-github"></i>
                            <span>GitHub</span>
                        </a>
                        <span>Version 2.0</span>
                    </div>
                </div>
            </div>
        </div>
    </footer>


        <style>
    .filter-btn {
        @apply px-4 py-2 rounded-lg text-sm transition-all duration-200;
        background: rgba(255, 255, 255, 0.1);
    }

    .filter-btn.active {
        @apply bg-primary text-white;
    }

    .search-input {
        @apply bg-opacity-10 bg-white border border-gray-700 rounded-lg px-4 py-2 text-white w-64 focus:outline-none focus:border-primary transition-all duration-200;
    }

    .command-card {
        transition: all 0.3s ease;
        opacity: 1;
        transform: translateY(0);
    }

    .command-card.hidden {
        opacity: 0;
        transform: translateY(10px);
        display: none;
    }

    :root {
            --primary: #2563EB;
            --primary-dark: #1D4ED8;
            --primary-light: #3B82F6;
            --secondary: #0F172A;
            --secondary-light: #1E293B;
            --accent: #F59E0B;
            --accent-dark: #D97706;
            --dark: #020617;
            --darker: #000000;
            --light: #F8FAFC;
            --gray-50: #F9FAFB;
            --gray-100: #F3F4F6;
            --gray-200: #E5E7EB;
            --gray-300: #D1D5DB;
            --gray-400: #9CA3AF;
            --gray-500: #6B7280;
            --gray-600: #4B5563;
            --gray-700: #374151;
            --gray-800: #1F2937;
            --gray-900: #111827;
            --glass-bg: rgba(15, 23, 42, 0.8);
            --glass-light: rgba(248, 250, 252, 0.05);
            --glass-border: rgba(148, 163, 184, 0.1);
            --shadow-primary: 0 25px 50px -12px rgba(37, 99, 235, 0.25);
            --shadow-dark: 0 25px 50px -12px rgba(0, 0, 0, 0.4);
            --shadow-glow: 0 0 40px rgba(37, 99, 235, 0.3);
            --transition-standard: cubic-bezier(0.4, 0, 0.2, 1);
            --transition-smooth: cubic-bezier(0.25, 0.46, 0.45, 0.94);
            --transition-spring: cubic-bezier(0.175, 0.885, 0.32, 1.275);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: 
                radial-gradient(ellipse at top, rgba(37, 99, 235, 0.1) 0%, transparent 60%),
                radial-gradient(ellipse at bottom right, rgba(15, 23, 42, 0.8) 0%, transparent 60%),
                linear-gradient(180deg, var(--dark) 0%, var(--darker) 100%);
            color: var(--light);
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            overflow-x: hidden;
            min-height: 100vh;
            position: relative;
            font-feature-settings: 'cv02', 'cv03', 'cv04', 'cv11';
        }

        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: 
                linear-gradient(rgba(37, 99, 235, 0.03) 1px, transparent 1px),
                linear-gradient(90deg, rgba(37, 99, 235, 0.03) 1px, transparent 1px);
            background-size: 50px 50px;
            pointer-events: none;
            z-index: -1;
            opacity: 0.5;
        }

        /* Navigation Excellence */
        nav {
            backdrop-filter: blur(24px) saturate(180%);
            background: rgba(2, 6, 23, 0.9);
            border-bottom: 1px solid var(--glass-border);
            box-shadow: 
                0 1px 3px rgba(0, 0, 0, 0.12),
                0 1px 2px rgba(0, 0, 0, 0.24);
            transition: all 0.3s var(--transition-smooth);
            position: relative;
        }

        nav::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 1px;
            background: linear-gradient(90deg, transparent, var(--primary), transparent);
            opacity: 0;
            transition: opacity 0.3s var(--transition-smooth);
        }

        nav:hover::after {
            opacity: 0.6;
        }

        .nav-link {
            position: relative;
            font-weight: 500;
            font-size: 0.875rem;
            letter-spacing: 0.025em;
            transition: all 0.3s var(--transition-standard);
            padding: 0.5rem 0;
        }

        .nav-link::before {
            content: '';
            position: absolute;
            bottom: -1px;
            left: 0;
            width: 0;
            height: 2px;
            background: var(--primary);
            transition: width 0.3s var(--transition-spring);
        }

        .nav-link:hover {
            color: var(--primary-light);
        }

        .nav-link:hover::before {
            width: 100%;
        }

        /* Button Sophistication */
        .btn-primary {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
            border: none;
            color: var(--light);
            font-weight: 600;
            font-size: 0.875rem;
            letter-spacing: 0.025em;
            position: relative;
            overflow: hidden;
            transition: all 0.3s var(--transition-standard);
            box-shadow: var(--shadow-primary);
            border-radius: 0.75rem;
        }

        .btn-primary::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 200%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s var(--transition-smooth);
        }

        .btn-primary::after {
            content: '';
            position: absolute;
            inset: 0;
            background: linear-gradient(135deg, var(--primary-light) 0%, var(--primary) 100%);
            opacity: 0;
            transition: opacity 0.3s var(--transition-smooth);
            z-index: -1;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 
                var(--shadow-primary),
                var(--shadow-glow);
        }

        .btn-primary:hover::before {
            left: 100%;
        }

        .btn-primary:hover::after {
            opacity: 1;
        }

        .btn-primary:active {
            transform: translateY(0);
            transition-duration: 0.1s;
        }

        /* Card Elegance */
        .card {
            background: var(--glass-bg);
            backdrop-filter: blur(16px) saturate(120%);
            border: 1px solid var(--glass-border);
            border-radius: 1rem;
            position: relative;
            overflow: hidden;
            transition: all 0.4s var(--transition-smooth);
        }

        .card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 1px;
            background: linear-gradient(90deg, transparent, rgba(148, 163, 184, 0.4), transparent);
            opacity: 0;
            transition: opacity 0.3s var(--transition-smooth);
        }

        .card:hover {
            transform: translateY(-4px);
            border-color: rgba(37, 99, 235, 0.3);
            box-shadow: 
                0 20px 25px -5px rgba(0, 0, 0, 0.2),
                0 10px 10px -5px rgba(0, 0, 0, 0.1),
                0 0 30px rgba(37, 99, 235, 0.15);
        }

        .card:hover::before {
            opacity: 1;
        }

        /* Enhanced Icons */
        .w-14 {
            position: relative;
            transition: all 0.3s var(--transition-spring);
            border-radius: 0.75rem;
        }

        .w-14::before {
            content: '';
            position: absolute;
            inset: -2px;
            background: linear-gradient(135deg, var(--primary), var(--primary-light));
            border-radius: 0.875rem;
            opacity: 0;
            transition: opacity 0.3s var(--transition-smooth);
            z-index: -1;
        }

        .card:hover .w-14 {
            transform: scale(1.1) rotateY(5deg);
        }

        .card:hover .w-14::before {
            opacity: 0.2;
        }

        /* Sophisticated Orbs */
        .orb {
            position: fixed;
            border-radius: 50%;
            filter: blur(100px);
            opacity: 0.3;
            pointer-events: none;
            z-index: -1;
        }

        .orb-1 {
            width: 500px;
            height: 500px;
            top: -250px;
            right: -250px;
            background: radial-gradient(circle, var(--primary) 0%, transparent 70%);
            animation: orbDrift 30s ease-in-out infinite;
        }

        .orb-2 {
            width: 700px;
            height: 700px;
            bottom: -350px;
            left: -350px;
            background: radial-gradient(circle, var(--secondary-light) 0%, transparent 70%);
            animation: orbDrift 40s ease-in-out infinite reverse;
        }

        /* Typography Enhancement */
        h1, h2, h3 {
            font-weight: 700;
            letter-spacing: -0.025em;
            line-height: 1.2;
        }

        .text-primary {
            color: var(--primary-light);
            position: relative;
        }

        /* Command Cards Refinement */
        .command-card {
            background: var(--glass-light);
            backdrop-filter: blur(12px);
            border: 1px solid var(--glass-border);
            border-radius: 0.875rem;
            position: relative;
            overflow: hidden;
            transition: all 0.3s var(--transition-standard);
        }

        .command-card::after {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 200%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(37, 99, 235, 0.1), transparent);
            transition: left 0.6s var(--transition-smooth);
        }

        .command-card:hover {
            transform: translateY(-3px);
            border-color: rgba(37, 99, 235, 0.25);
            box-shadow: 
                0 10px 15px -3px rgba(0, 0, 0, 0.1),
                0 4px 6px -2px rgba(0, 0, 0, 0.05),
                0 0 20px rgba(37, 99, 235, 0.1);
        }

        .command-card:hover::after {
            left: 100%;
        }

        /* Status Indicators */
        .status-badge {
            font-weight: 600;
            font-size: 0.75rem;
            letter-spacing: 0.05em;
            text-transform: uppercase;
            border-radius: 0.5rem;
            padding: 0.375rem 0.75rem;
            transition: all 0.3s var(--transition-standard);
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12);
        }

        .status-badge.online {
            background: linear-gradient(135deg, #10B981 0%, #059669 100%);
            color: var(--light);
            animation: statusPulse 3s ease-in-out infinite;
        }

        .status-badge.offline {
            background: linear-gradient(135deg, #EF4444 0%, #DC2626 100%);
            color: var(--light);
        }

        /* Filter System */
        .filter-btn {
            background: var(--glass-light);
            backdrop-filter: blur(8px);
            border: 1px solid var(--glass-border);
            color: var(--gray-300);
            font-weight: 500;
            font-size: 0.875rem;
            transition: all 0.3s var(--transition-standard);
            border-radius: 0.5rem;
        }

        .filter-btn:hover,
        .filter-btn.active {
            background: var(--primary);
            border-color: var(--primary);
            color: var(--light);
            transform: translateY(-1px);
            box-shadow: 0 4px 6px -1px rgba(37, 99, 235, 0.2);
        }

        /* Input Refinement */
        input[type="text"] {
            background: var(--glass-bg);
            backdrop-filter: blur(12px);
            border: 1px solid var(--glass-border);
            color: var(--light);
            border-radius: 0.75rem;
            transition: all 0.3s var(--transition-standard);
            font-weight: 400;
        }

        input[type="text"]:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 
                0 0 0 3px rgba(37, 99, 235, 0.1),
                0 1px 3px rgba(0, 0, 0, 0.1);
        }

        input[type="text"]::placeholder {
            color: var(--gray-400);
        }

        /* Refined Animations */
        @keyframes orbDrift {
            0%, 100% { 
                transform: translate(0, 0) scale(1);
                opacity: 0.3;
            }
            25% { 
                transform: translate(20px, -30px) scale(1.05);
                opacity: 0.4;
            }
            50% { 
                transform: translate(-10px, -20px) scale(0.95);
                opacity: 0.5;
            }
            75% { 
                transform: translate(-30px, 10px) scale(1.02);
                opacity: 0.35;
            }
        }

        @keyframes statusPulse {
            0%, 100% { 
                box-shadow: 
                    0 1px 3px rgba(0, 0, 0, 0.12),
                    0 0 0 0 rgba(16, 185, 129, 0.4);
            }
            50% { 
                box-shadow: 
                    0 1px 3px rgba(0, 0, 0, 0.12),
                    0 0 0 8px rgba(16, 185, 129, 0);
            }
        }

        @keyframes subtleFloat {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-4px); }
        }

        /* Scrollbar Styling */
        ::-webkit-scrollbar {
            width: 6px;
        }

        ::-webkit-scrollbar-track {
            background: var(--gray-900);
        }

        ::-webkit-scrollbar-thumb {
            background: linear-gradient(180deg, var(--primary) 0%, var(--primary-dark) 100%);
            border-radius: 3px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: linear-gradient(180deg, var(--primary-light) 0%, var(--primary) 100%);
        }

        /* Selection Styling */
        ::selection {
            background: rgba(37, 99, 235, 0.2);
            color: var(--light);
        }

        /* Responsive Optimizations */
        @media (max-width: 768px) {
            .card:hover {
                transform: translateY(-2px);
            }
            
            .btn-primary:hover {
                transform: translateY(-1px);
            }
            
            .orb-1, .orb-2 {
                width: 300px;
                height: 300px;
                opacity: 0.2;
            }
            
            body::before {
                background-size: 30px 30px;
                opacity: 0.3;
            }
        }

        /* Performance Optimizations */
        .card, .btn-primary, .nav-link, .command-card {
            will-change: transform;
        }

        /* Focus States */
        .btn-primary:focus-visible {
            outline: 2px solid var(--primary);
            outline-offset: 2px;
        }

        .nav-link:focus-visible {
            outline: 2px solid var(--primary);
            outline-offset: 4px;
            border-radius: 0.25rem;
        }

        /* Loading Animation */
        .loading {
            position: relative;
            overflow: hidden;
        }

        .loading::after {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 200%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(148, 163, 184, 0.1), transparent);
            animation: elegantShimmer 2s infinite;
        }

        @keyframes elegantShimmer {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
        }
</style>
    <script>
        // Smooth scrolling for navigation links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Command filtering functionality 
        document.addEventListener('DOMContentLoaded', () => {
            const filterBtns = document.querySelectorAll('.filter-btn');
            const searchInput = document.getElementById('command-search');
            const commandCards = document.querySelectorAll('.command-card');

            function filterCommands() {
                const activeFilter = document.querySelector('.filter-btn.active').dataset.filter;
                const searchTerm = searchInput ? searchInput.value.toLowerCase() : '';

                commandCards.forEach(card => {
                    const category = card.dataset.category;
                    const name = card.dataset.name || '';
                    const description = card.dataset.description || '';

                    const matchesFilter = activeFilter === 'all' || category === activeFilter;
                    const matchesSearch = !searchTerm || 
                                        name.includes(searchTerm) || 
                                        description.includes(searchTerm);

                    if (matchesFilter && matchesSearch) {
                        card.style.display = 'block';
                        card.style.opacity = '1';
                        card.style.transform = 'translateY(0)';
                    } else {
                        card.style.opacity = '0';
                        card.style.transform = 'translateY(20px)';
                        setTimeout(() => {
                            card.style.display = 'none';
                        }, 300);
                    }
                });
            }


    document.addEventListener('contextmenu', e => e.preventDefault());

    document.addEventListener('keydown', e => {
    if ((e.ctrlKey || e.metaKey) && 
        (e.key === 'c' || 
         e.key === 'C' || 
         e.key === 'u' || 
         e.key === 'U' || 
         e.key === 's' || 
         e.key === 'S' || 
         e.key === 'i' || 
         e.key === 'I')) {
        e.preventDefault();
    }
});
            // Filter button click handlers
            filterBtns.forEach(btn => {
                btn.addEventListener('click', () => {
                    filterBtns.forEach(b => b.classList.remove('active', 'bg-purple-600'));
                    filterBtns.forEach(b => b.classList.add('bg-gray-700'));
                    btn.classList.add('active', 'bg-purple-600');
                    btn.classList.remove('bg-gray-700');
                    filterCommands();
                });
            });

            // Search input handler with debounce
            let searchTimeout;
            searchInput.addEventListener('input', () => {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(filterCommands, 300);
            });

            // Initial filter
            filterCommands();
        });

            function updateBotStatus(data) {
        const statusElement = document.getElementById('bot-status');
        const latencyElement = document.getElementById('latency');
        
        if (statusElement) {
            statusElement.className = `px-2 py-1 rounded text-xs ${data.online ? 'bg-green-500' : 'bg-red-500'}`;
            statusElement.textContent = data.online ? 'Online' : 'Offline';
        }
        
        if (latencyElement) {
            latencyElement.textContent = `Latency: ${data.ping}ms`;
        }
    }

    function checkBotStatus() {
        fetch('/api/status')
            .then(res => res.json())
            .then(updateBotStatus)
            .catch(() => updateBotStatus({ online: false, ping: '---' }));
    }

    // Initial check and periodic updates
    checkBotStatus();
    setInterval(checkBotStatus, 30000);
    </script>
</body>
</html>